<?xml version="1.0" encoding="utf-8" ?>
<customcontrol:CustomContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Presentation.View.ResetPasswordContentPage"
             xmlns:converter="clr-namespace:Presentation.Converter"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:customcontrol="clr-namespace:Presentation.Controls"
             NavigationPage.HasBackButton="False"
             NavigationPage.HasNavigationBar="False" 
                                 customcontrol:BlockBackButtonAction="{Binding BlockBackSwitch}" 
                                 BackButtonCommand="{Binding BackButtonCommand}">
    <ContentPage.Resources>
        <converter:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter"></converter:FirstValidationErrorConverter>
        <converter:BoolInvertConverter x:Key="BoolInvertConverter"></converter:BoolInvertConverter>

    </ContentPage.Resources>
    <Grid BackgroundColor="{StaticResource SplashBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Border Padding="16,8" HorizontalOptions="Center" Grid.Row="0" Grid.RowSpan="3" Grid.Column="0" Margin="30,30,30,30" Background="{StaticResource Primary}" ZIndex="1" >
                <Border.StrokeShape>
                    <RoundRectangle CornerRadius="30,30,30,30" />
                </Border.StrokeShape>
            <ScrollView VerticalScrollBarVisibility="Default" HorizontalScrollBarVisibility="Default">
                <VerticalStackLayout Spacing="20">

                    <Label Text="RESET PASSWORD" VerticalOptions="Center" HorizontalOptions="Center" FontAttributes="Bold" TextColor="White"/>
                    <ScrollView HeightRequest="525" VerticalScrollBarVisibility="Always">
                        <VerticalStackLayout Spacing="20">
                            <StackLayout IsVisible="{Binding IsRequestSent,Converter={StaticResource BoolInvertConverter}}" Spacing="20" Orientation="Vertical">
                                <Frame Padding="10" BorderColor="Transparent" CornerRadius="15">
                                    <HorizontalStackLayout Spacing="10">
                                        <Path VerticalOptions="Center" HorizontalOptions="Center" Stroke="{StaticResource Primary}" StrokeThickness="1" StrokeMiterLimit="10" HeightRequest="24" WidthRequest="24" Data="M18,2H6C4.895,2,4,2.895,4,4v16c0,1.105,0.895,2,2,2h12c1.105,0,2-0.895,2-2V4C20,2.895,19.105,2,18,2z M12,6 c1.7,0,3,1.3,3,3s-1.3,3-3,3s-3-1.3-3-3S10.3,6,12,6z M16.333,18H7.667C7.298,18,7,17.702,7,17.333V17c0-1.571,2.512-3,5-3 s5,1.429,5,3v0.333C17,17.702,16.702,18,16.333,18z"></Path>
                                        <VerticalStackLayout>
                                            <Entry Placeholder="E-Mail..." Text="{Binding Email.Value,Mode=TwoWay}" 
                                           IsTextPredictionEnabled="False" IsSpellCheckEnabled="False"
                                           WidthRequest="200" MinimumWidthRequest="200">
                                                <Entry.Behaviors>
                                                    <toolkit:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateByValueChangeCommand}" CommandParameter="1" />
                                                </Entry.Behaviors>
                                                <Entry.Triggers>
                                                    <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding Email.IsValid,Mode=OneWayToSource}" Value="False">
                                                        <Setter Property="BackgroundColor" Value="Red" />

                                                    </DataTrigger>
                                                    <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding Email.IsValid,Mode=OneWayToSource}" Value="True">
                                                        <Setter Property="BackgroundColor" Value="Transparent" />
                                                    </DataTrigger>
                                                </Entry.Triggers>
                                            </Entry>
                                            <Label Text="{Binding Email.Errors, Converter={StaticResource FirstValidationErrorConverter}}" />
                                        </VerticalStackLayout>
                                    </HorizontalStackLayout>
                                </Frame>
                                <Label Text="OR" VerticalOptions="Center" HorizontalOptions="Center" FontAttributes="Bold" TextColor="White"></Label>
                                <Frame Padding="10" BorderColor="Transparent" CornerRadius="15">
                                    <HorizontalStackLayout Spacing="10">
                                        <Path VerticalOptions="Center" HorizontalOptions="Center" Stroke="{StaticResource Primary}" StrokeThickness="1" StrokeMiterLimit="10" HeightRequest="24" WidthRequest="24" Data="M18,2H6C4.895,2,4,2.895,4,4v16c0,1.105,0.895,2,2,2h12c1.105,0,2-0.895,2-2V4C20,2.895,19.105,2,18,2z M12,6 c1.7,0,3,1.3,3,3s-1.3,3-3,3s-3-1.3-3-3S10.3,6,12,6z M16.333,18H7.667C7.298,18,7,17.702,7,17.333V17c0-1.571,2.512-3,5-3 s5,1.429,5,3v0.333C17,17.702,16.702,18,16.333,18z"></Path>
                                        <VerticalStackLayout>
                                            <Entry Placeholder="Phone..." Text="{Binding Phone.Value,Mode=TwoWay}" 
                                           IsPassword="False" IsTextPredictionEnabled="False" IsSpellCheckEnabled="False"
                                           WidthRequest="200" MinimumWidthRequest="200">
                                                <Entry.Behaviors>
                                                    <toolkit:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateByValueChangeCommand}" CommandParameter="2" />
                                                </Entry.Behaviors>
                                                <Entry.Triggers>
                                                    <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding Phone.IsValid,Mode=OneWayToSource}" Value="False">
                                                        <Setter Property="BackgroundColor" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding Phone.IsValid,Mode=OneWayToSource}" Value="True">
                                                        <Setter Property="BackgroundColor" Value="Transparent" />
                                                    </DataTrigger>
                                                </Entry.Triggers>
                                            </Entry>
                                            <Label Text="{Binding Phone.Errors, Converter={StaticResource FirstValidationErrorConverter}}" />
                                        </VerticalStackLayout>
                                    </HorizontalStackLayout>
                                </Frame>

                            </StackLayout>
                            <Frame IsVisible="{Binding IsRequestSent}" Padding="5" BorderColor="Transparent" CornerRadius="15">
                                <VerticalStackLayout>
                                    <StackLayout Orientation="Vertical" Spacing="10" 
                                                 IsVisible="{Binding IsCodeSentToBackendForVerify,Converter={StaticResource BoolInvertConverter}}">
                                        <Label Text="Security Code:" Margin="0,0,0,10" FontSize="Subtitle" FontAttributes="Bold" TextColor="{StaticResource Primary}"></Label>
                                        <Line X1="0" X2="260" Stroke="{StaticResource Primary}"></Line>
                                        <HorizontalStackLayout >
                                            <Entry Keyboard="Numeric" Text="{Binding SecureCodeEntry1.Value,Mode=TwoWay}" MaxLength="1" TextColor="{StaticResource Primary}" IsTextPredictionEnabled="False" IsSpellCheckEnabled="False" PlaceholderColor="{StaticResource Primary}" Placeholder="0" x:Name="Code1" TextChanged="Code1_TextChanged"></Entry>
                                            <Entry Keyboard="Numeric" Text="{Binding SecureCodeEntry2.Value,Mode=TwoWay}" MaxLength="1" TextColor="{StaticResource Primary}" IsTextPredictionEnabled="False" IsSpellCheckEnabled="False" PlaceholderColor="{StaticResource Primary}" Placeholder="0" x:Name="Code2" TextChanged="Code2_TextChanged"></Entry>
                                            <Entry Keyboard="Numeric" Text="{Binding SecureCodeEntry3.Value,Mode=TwoWay}" MaxLength="1" TextColor="{StaticResource Primary}" IsTextPredictionEnabled="False" IsSpellCheckEnabled="False" PlaceholderColor="{StaticResource Primary}" Placeholder="0" x:Name="Code3" TextChanged="Code3_TextChanged"></Entry>
                                            <Entry Keyboard="Numeric" Text="{Binding SecureCodeEntry4.Value,Mode=TwoWay}" MaxLength="1" TextColor="{StaticResource Primary}" IsTextPredictionEnabled="False" IsSpellCheckEnabled="False" PlaceholderColor="{StaticResource Primary}" Placeholder="0" x:Name="Code4" TextChanged="Code4_TextChanged"></Entry>
                                            <Entry Keyboard="Numeric" Text="{Binding SecureCodeEntry5.Value,Mode=TwoWay}" MaxLength="1" TextColor="{StaticResource Primary}" IsTextPredictionEnabled="False" IsSpellCheckEnabled="False" PlaceholderColor="{StaticResource Primary}" Placeholder="0" x:Name="Code5" TextChanged="Code5_TextChanged"></Entry>
                                            <Entry Keyboard="Numeric" Text="{Binding SecureCodeEntry6.Value,Mode=TwoWay}" MaxLength="1" TextColor="{StaticResource Primary}" IsTextPredictionEnabled="False" IsSpellCheckEnabled="False" PlaceholderColor="{StaticResource Primary}" Placeholder="0" x:Name="Code6" TextChanged="Code6_TextChanged"></Entry>
                                        </HorizontalStackLayout>
                                        <Button Text="SUBMIT" Command="{Binding SubmitCodeActionCommand}" HorizontalOptions="Center" BackgroundColor="White" TextColor="{StaticResource Primary}" FontSize="Subtitle" FontAttributes="Bold">

                                        </Button>
                                    </StackLayout>
                                    <StackLayout Orientation="Vertical" IsVisible="{Binding IsCodeSentToBackendForVerify}">
                                        <Frame Padding="5" BorderColor="Transparent" CornerRadius="15">
                                            <HorizontalStackLayout Spacing="5">
                                                <Path VerticalOptions="Center" HorizontalOptions="Center" Stroke="{StaticResource Primary}" StrokeThickness="1" StrokeMiterLimit="10" HeightRequest="24" WidthRequest="24" Data="M18,2H6C4.895,2,4,2.895,4,4v16c0,1.105,0.895,2,2,2h12c1.105,0,2-0.895,2-2V4C20,2.895,19.105,2,18,2z M12,6 c1.7,0,3,1.3,3,3s-1.3,3-3,3s-3-1.3-3-3S10.3,6,12,6z M16.333,18H7.667C7.298,18,7,17.702,7,17.333V17c0-1.571,2.512-3,5-3 s5,1.429,5,3v0.333C17,17.702,16.702,18,16.333,18z"></Path>
                                                <VerticalStackLayout>
                                                    <Entry Placeholder="Password..." Text="{Binding Password.Value,Mode=TwoWay}" 
                                           IsPassword="{Binding ShowPassword,Converter={StaticResource BoolInvertConverter},Mode=TwoWay}" IsTextPredictionEnabled="False" IsSpellCheckEnabled="False"
                                           WidthRequest="200" MinimumWidthRequest="200">
                                                        <Entry.Behaviors>
                                                            <toolkit:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateByValueChangeCommand}" CommandParameter="3" />
                                                        </Entry.Behaviors>
                                                        <Entry.Triggers>
                                                            <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding Password.IsValid,Mode=OneWayToSource}" Value="False">
                                                                <Setter Property="BackgroundColor" Value="Red" />
                                                            </DataTrigger>
                                                            <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding Password.IsValid,Mode=OneWayToSource}" Value="True">
                                                                <Setter Property="BackgroundColor" Value="Transparent" />
                                                            </DataTrigger>
                                                        </Entry.Triggers>
                                                    </Entry>
                                                    <Label 
                                                        MaximumWidthRequest="40"
                                                        Text="{Binding Password.Errors, Converter={StaticResource FirstValidationErrorConverter}}" />
                                                </VerticalStackLayout>
                                                <Switch 
                                                    ThumbColor="Gray"
                                                    IsToggled="{Binding ShowPassword,Mode=TwoWay}" 
                                                    OnColor="{StaticResource Primary}"></Switch>
                                            </HorizontalStackLayout>
                                        </Frame>
                                        <Frame Padding="5" BorderColor="Transparent" CornerRadius="15">
                                            <HorizontalStackLayout Spacing="10">
                                                <Path VerticalOptions="Center" HorizontalOptions="Center" Stroke="{StaticResource Primary}" StrokeThickness="1" StrokeMiterLimit="10" HeightRequest="24" WidthRequest="24" Data="M18,2H6C4.895,2,4,2.895,4,4v16c0,1.105,0.895,2,2,2h12c1.105,0,2-0.895,2-2V4C20,2.895,19.105,2,18,2z M12,6 c1.7,0,3,1.3,3,3s-1.3,3-3,3s-3-1.3-3-3S10.3,6,12,6z M16.333,18H7.667C7.298,18,7,17.702,7,17.333V17c0-1.571,2.512-3,5-3 s5,1.429,5,3v0.333C17,17.702,16.702,18,16.333,18z"></Path>
                                                <VerticalStackLayout>
                                                    <Entry Placeholder="Password repeat..." Text="{Binding PasswordRepeat.Value,Mode=TwoWay}" 
                                           IsPassword="{Binding ShowPassword,Converter={StaticResource BoolInvertConverter},Mode=TwoWay}" IsTextPredictionEnabled="False" IsSpellCheckEnabled="False"
                                           WidthRequest="200" MinimumWidthRequest="200">
                                                        <Entry.Behaviors>
                                                            <toolkit:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateByValueChangeCommand}" CommandParameter="4" />
                                                        </Entry.Behaviors>
                                                        <Entry.Triggers>
                                                            <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding PasswordRepeat.IsValid,Mode=OneWayToSource}" Value="False">
                                                                <Setter Property="BackgroundColor" Value="Red" />
                                                            </DataTrigger>
                                                            <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding PasswordRepeat.IsValid,Mode=OneWayToSource}" Value="True">
                                                                <Setter Property="BackgroundColor" Value="Transparent" />
                                                            </DataTrigger>
                                                        </Entry.Triggers>
                                                    </Entry>
                                                    <Label 
                                                        MaximumWidthRequest="50"
                                                        Text="{Binding PasswordRepeat.Errors, Converter={StaticResource FirstValidationErrorConverter}}" />
                                                </VerticalStackLayout>
                                            </HorizontalStackLayout>
                                        </Frame>
                                        <Button Text="CHANGE PASSWORD" Command="{Binding SubmitPasswordActionCommand}" HorizontalOptions="Center" BackgroundColor="White" TextColor="{StaticResource Primary}" FontSize="Subtitle" FontAttributes="Bold">

                                        </Button>
                                    </StackLayout>
                                </VerticalStackLayout>
                                
                            </Frame>
                        </VerticalStackLayout>
                    </ScrollView>
                    <HorizontalStackLayout Spacing="10" HorizontalOptions="Center" IsVisible="{Binding IsCodeSentToBackendForVerify,Converter={StaticResource BoolInvertConverter}}">
                        <Button Text="RESET" Command="{Binding SubmitActionCommand}" HorizontalOptions="Center" BackgroundColor="White" TextColor="{StaticResource Primary}" FontSize="Subtitle" FontAttributes="Bold">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.Triggers>
                                        <DataTrigger TargetType="Button" Binding="{Binding IsRequestSent}" Value="True">
                                            <Setter Property="Text" Value="RESEND CODE"></Setter>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Button" Binding="{Binding IsRequestSent}" Value="False">
                                            <Setter Property="Text" Value="RESET"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                    </HorizontalStackLayout>
                    <ActivityIndicator Margin="0,0,0,0" Color="White" IsRunning="True" IsVisible="{Binding IsLoading}" HeightRequest="20" WidthRequest="20">
                    </ActivityIndicator>
                </VerticalStackLayout>
            </ScrollView>
        </Border>
    </Grid>
</customcontrol:CustomContentPage>
