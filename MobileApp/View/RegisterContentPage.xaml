<?xml version="1.0" encoding="utf-8" ?>
<customcontrol:CustomContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="MobileApp.View.RegisterContentPage"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:converter="clr-namespace:MobileApp.Converter"
             xmlns:vm="clr-namespace:MobileApp.ViewModel"
             xmlns:customcontrol="clr-namespace:MobileApp.Controls"
                                 xmlns:s="clr-namespace:System;assembly=mscorlib"
             xmlns:skia="clr-namespace:SkiaSharp.Extended.UI.Controls;assembly=SkiaSharp.Extended.UI"
             NavigationPage.HasBackButton="False"
             NavigationPage.HasNavigationBar="False">
    <ContentPage.Resources>
        <converter:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter"></converter:FirstValidationErrorConverter>
        <converter:LanguageSelectPrefixStringConveter x:Key="LanguageSelectPrefixStringConveter"></converter:LanguageSelectPrefixStringConveter>
        <converter:BoolInvertConverter x:Key="BoolInvertConverter"></converter:BoolInvertConverter>
        <s:Boolean x:Key="True">True</s:Boolean>
        <s:Boolean x:Key="False">False</s:Boolean>
    </ContentPage.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Border 
                    Padding="16,8" 
                    HorizontalOptions="Center"
                    VerticalOptions="Fill"
                    Grid.Row="0" 
                    Grid.RowSpan="3" 
                    Grid.Column="0" 
                    Margin="30,30,30,30" 
                    Background="{StaticResource Primary}" 
                    ZIndex="1" >
                <Border.StrokeShape>
                    <RoundRectangle CornerRadius="30,30,30,30" />
                </Border.StrokeShape>
            <ScrollView 
                VerticalScrollBarVisibility="Default" 
                HorizontalScrollBarVisibility="Default">
                <VerticalStackLayout 
                    Spacing="10">

                    <Label Text="REGISTER" VerticalOptions="Center" HorizontalOptions="Center" FontAttributes="Bold" TextColor="White"/>
                    <VerticalStackLayout
                        Spacing="20"
                        IsVisible="{Binding IsNowScuccessfullyRegistered,Converter={StaticResource BoolInvertConverter}}">

                        <ScrollView 
                        HeightRequest="525" 
                        VerticalOptions="Fill"
                        VerticalScrollBarVisibility="Always">
                            <VerticalStackLayout 
                                Spacing="20">
                                <Frame Padding="10" BorderColor="Transparent" CornerRadius="15">
                                    <HorizontalStackLayout Spacing="10">
                                        <Path VerticalOptions="Center" HorizontalOptions="Center" Stroke="#512BD4" StrokeThickness="1" StrokeMiterLimit="10" HeightRequest="24" WidthRequest="24" Data="M18,2H6C4.895,2,4,2.895,4,4v16c0,1.105,0.895,2,2,2h12c1.105,0,2-0.895,2-2V4C20,2.895,19.105,2,18,2z M12,6 c1.7,0,3,1.3,3,3s-1.3,3-3,3s-3-1.3-3-3S10.3,6,12,6z M16.333,18H7.667C7.298,18,7,17.702,7,17.333V17c0-1.571,2.512-3,5-3 s5,1.429,5,3v0.333C17,17.702,16.702,18,16.333,18z"></Path>
                                        <VerticalStackLayout>
                                            <Entry Placeholder="Firstname..." Text="{Binding Firstname.Value,Mode=TwoWay}" 
                                           IsTextPredictionEnabled="False" IsSpellCheckEnabled="False"
                                           WidthRequest="200" MinimumWidthRequest="200">
                                                <Entry.Behaviors>
                                                    <toolkit:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateByValueChangeCommand}" CommandParameter="4" />
                                                </Entry.Behaviors>
                                                <Entry.Triggers>
                                                    <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding Firstname.IsValid,Mode=OneWayToSource}" Value="False">
                                                        <Setter Property="BackgroundColor" Value="Red" />

                                                    </DataTrigger>
                                                    <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding Firstname.IsValid,Mode=OneWayToSource}" Value="True">
                                                        <Setter Property="BackgroundColor" Value="Transparent" />
                                                    </DataTrigger>
                                                </Entry.Triggers>
                                            </Entry>
                                            <Label Text="{Binding Firstname.Errors, Converter={StaticResource FirstValidationErrorConverter}}" />
                                        </VerticalStackLayout>
                                    </HorizontalStackLayout>
                                </Frame>

                                <Frame Padding="10" BorderColor="Transparent" CornerRadius="15">
                                    <HorizontalStackLayout Spacing="10">
                                        <Path VerticalOptions="Center" HorizontalOptions="Center" Stroke="#512BD4" StrokeThickness="1" StrokeMiterLimit="10" HeightRequest="24" WidthRequest="24" Data="M18,2H6C4.895,2,4,2.895,4,4v16c0,1.105,0.895,2,2,2h12c1.105,0,2-0.895,2-2V4C20,2.895,19.105,2,18,2z M12,6 c1.7,0,3,1.3,3,3s-1.3,3-3,3s-3-1.3-3-3S10.3,6,12,6z M16.333,18H7.667C7.298,18,7,17.702,7,17.333V17c0-1.571,2.512-3,5-3 s5,1.429,5,3v0.333C17,17.702,16.702,18,16.333,18z"></Path>
                                        <VerticalStackLayout>
                                            <Entry Placeholder="Lastname..." Text="{Binding Lastname.Value,Mode=TwoWay}" 
                                           IsTextPredictionEnabled="False" IsSpellCheckEnabled="False"
                                           WidthRequest="200" MinimumWidthRequest="200">
                                                <Entry.Behaviors>
                                                    <toolkit:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateByValueChangeCommand}" CommandParameter="5" />
                                                </Entry.Behaviors>
                                                <Entry.Triggers>
                                                    <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding Lastname.IsValid,Mode=OneWayToSource}" Value="False">
                                                        <Setter Property="BackgroundColor" Value="Red" />

                                                    </DataTrigger>
                                                    <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding Lastname.IsValid,Mode=OneWayToSource}" Value="True">
                                                        <Setter Property="BackgroundColor" Value="Transparent" />
                                                    </DataTrigger>
                                                </Entry.Triggers>
                                            </Entry>
                                            <Label Text="{Binding Lastname.Errors, Converter={StaticResource FirstValidationErrorConverter}}" />
                                        </VerticalStackLayout>
                                    </HorizontalStackLayout>
                                </Frame>
                                <Frame Padding="10" BorderColor="Transparent" CornerRadius="15">
                                    <HorizontalStackLayout Spacing="10">
                                        <Path VerticalOptions="Center" HorizontalOptions="Center" Stroke="#512BD4" StrokeThickness="1" StrokeMiterLimit="10" HeightRequest="24" WidthRequest="24" Data="M18,2H6C4.895,2,4,2.895,4,4v16c0,1.105,0.895,2,2,2h12c1.105,0,2-0.895,2-2V4C20,2.895,19.105,2,18,2z M12,6 c1.7,0,3,1.3,3,3s-1.3,3-3,3s-3-1.3-3-3S10.3,6,12,6z M16.333,18H7.667C7.298,18,7,17.702,7,17.333V17c0-1.571,2.512-3,5-3 s5,1.429,5,3v0.333C17,17.702,16.702,18,16.333,18z"></Path>
                                        <VerticalStackLayout>
                                            <Entry 
                                            Placeholder="E-Mail..." 
                                            Text="{Binding Email.Value,Mode=TwoWay}" 
                                            IsTextPredictionEnabled="False" 
                                            IsSpellCheckEnabled="False"
                                            Keyboard="Email"
                                            WidthRequest="200" MinimumWidthRequest="200">
                                                <Entry.Behaviors>
                                                    <toolkit:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateByValueChangeCommand}" CommandParameter="1" />
                                                </Entry.Behaviors>
                                                <Entry.Triggers>
                                                    <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding Email.IsValid,Mode=OneWayToSource}" Value="False">
                                                        <Setter Property="BackgroundColor" Value="Red" />

                                                    </DataTrigger>
                                                    <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding Email.IsValid,Mode=OneWayToSource}" Value="True">
                                                        <Setter Property="BackgroundColor" Value="Transparent" />
                                                    </DataTrigger>
                                                </Entry.Triggers>
                                            </Entry>
                                            <Label Text="{Binding Email.Errors, Converter={StaticResource FirstValidationErrorConverter}}" />
                                        </VerticalStackLayout>
                                    </HorizontalStackLayout>
                                </Frame>
                                <Frame Padding="10" BorderColor="Transparent" CornerRadius="15">
                                    <HorizontalStackLayout Spacing="10">
                                        <Path VerticalOptions="Center" HorizontalOptions="Center" Stroke="#512BD4" StrokeThickness="1" StrokeMiterLimit="10" HeightRequest="24" WidthRequest="24" Data="M18,2H6C4.895,2,4,2.895,4,4v16c0,1.105,0.895,2,2,2h12c1.105,0,2-0.895,2-2V4C20,2.895,19.105,2,18,2z M12,6 c1.7,0,3,1.3,3,3s-1.3,3-3,3s-3-1.3-3-3S10.3,6,12,6z M16.333,18H7.667C7.298,18,7,17.702,7,17.333V17c0-1.571,2.512-3,5-3 s5,1.429,5,3v0.333C17,17.702,16.702,18,16.333,18z"></Path>
                                        <VerticalStackLayout>
                                            <DatePicker 
                                            Date="{Binding DateOfBirth.Value,Mode=TwoWay}"
                                            HorizontalOptions="Fill">

                                                <DatePicker.Triggers>
                                                    <DataTrigger TargetType="{x:Type DatePicker}" Binding="{Binding DateOfBirth.IsValid,Mode=OneWayToSource}" Value="False">
                                                        <Setter Property="BackgroundColor" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger TargetType="{x:Type DatePicker}" Binding="{Binding DateOfBirth.IsValid,Mode=OneWayToSource}" Value="True">
                                                        <Setter Property="BackgroundColor" Value="Transparent" />
                                                    </DataTrigger>
                                                </DatePicker.Triggers>
                                            </DatePicker>
                                            <Label Text="{Binding DateOfBirth.Errors, Converter={StaticResource FirstValidationErrorConverter}}" />
                                        </VerticalStackLayout>
                                    </HorizontalStackLayout>
                                </Frame>
                                <Frame Padding="10" BorderColor="Transparent" CornerRadius="15">
                                    <HorizontalStackLayout Spacing="10">
                                        <Path VerticalOptions="Center" HorizontalOptions="Center" Stroke="#512BD4" StrokeThickness="1" StrokeMiterLimit="10" HeightRequest="24" WidthRequest="24" Data="M18,2H6C4.895,2,4,2.895,4,4v16c0,1.105,0.895,2,2,2h12c1.105,0,2-0.895,2-2V4C20,2.895,19.105,2,18,2z M12,6 c1.7,0,3,1.3,3,3s-1.3,3-3,3s-3-1.3-3-3S10.3,6,12,6z M16.333,18H7.667C7.298,18,7,17.702,7,17.333V17c0-1.571,2.512-3,5-3 s5,1.429,5,3v0.333C17,17.702,16.702,18,16.333,18z"></Path>
                                        <Picker x:Name="picker"
                                            SelectedItem="{Binding PhonePrefix.Value,Converter={StaticResource LanguageSelectPrefixStringConveter},ConverterParameter={x:Reference picker}}"
                                            Title="Prefix..." ItemDisplayBinding="{Binding PhonePrefix}" ItemsSource="{Binding Languages,Mode=TwoWay}">
                                        </Picker>
                                        <VerticalStackLayout>
                                            <Entry Placeholder="Phone..." 
                                               Text="{Binding Phone.Value,Mode=TwoWay}" 
                                           IsPassword="False" IsTextPredictionEnabled="False" IsSpellCheckEnabled="False"
                                           WidthRequest="200" MinimumWidthRequest="200">
                                                <Entry.Behaviors>
                                                    <toolkit:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateByValueChangeCommand}" CommandParameter="6" />
                                                </Entry.Behaviors>
                                                <Entry.Triggers>
                                                    <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding Phone.IsValid,Mode=OneWayToSource}" Value="False">
                                                        <Setter Property="BackgroundColor" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding Phone.IsValid,Mode=OneWayToSource}" Value="True">
                                                        <Setter Property="BackgroundColor" Value="Transparent" />
                                                    </DataTrigger>
                                                </Entry.Triggers>
                                            </Entry>
                                            <Label Text="{Binding Phone.Errors, Converter={StaticResource FirstValidationErrorConverter}}" />
                                        </VerticalStackLayout>
                                    </HorizontalStackLayout>
                                </Frame>
                                <Frame Padding="10" BorderColor="Transparent" CornerRadius="15">
                                    <HorizontalStackLayout Spacing="10">
                                        <Path VerticalOptions="Center" HorizontalOptions="Center" Stroke="#512BD4" StrokeThickness="1" StrokeMiterLimit="10" HeightRequest="24" WidthRequest="24" Data="M18,2H6C4.895,2,4,2.895,4,4v16c0,1.105,0.895,2,2,2h12c1.105,0,2-0.895,2-2V4C20,2.895,19.105,2,18,2z M12,6 c1.7,0,3,1.3,3,3s-1.3,3-3,3s-3-1.3-3-3S10.3,6,12,6z M16.333,18H7.667C7.298,18,7,17.702,7,17.333V17c0-1.571,2.512-3,5-3 s5,1.429,5,3v0.333C17,17.702,16.702,18,16.333,18z"></Path>
                                        <VerticalStackLayout>
                                            <Entry Placeholder="Password..." Text="{Binding Password.Value,Mode=TwoWay}" 
                                           IsPassword="{Binding ShowPassword,Converter={StaticResource BoolInvertConverter}}" IsTextPredictionEnabled="False" IsSpellCheckEnabled="False">
                                                <Entry.Behaviors>
                                                    <toolkit:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateByValueChangeCommand}" CommandParameter="2" />
                                                </Entry.Behaviors>
                                                <Entry.Triggers>
                                                    <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding Password.IsValid,Mode=OneWayToSource}" Value="False">
                                                        <Setter Property="BackgroundColor" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding Password.IsValid,Mode=OneWayToSource}" Value="True">
                                                        <Setter Property="BackgroundColor" Value="Transparent" />
                                                    </DataTrigger>
                                                </Entry.Triggers>
                                            </Entry>
                                            <Label Text="{Binding Password.Errors, Converter={StaticResource FirstValidationErrorConverter}}" MaximumWidthRequest="150" />
                                        </VerticalStackLayout>
                                        <Switch 
                                            ThumbColor="Gray"
                                            IsToggled="{Binding ShowPassword,Mode=TwoWay}" 
                                            OnColor="{StaticResource Primary}"></Switch>
                                    </HorizontalStackLayout>
                                </Frame>
                                <Frame Padding="10" BorderColor="Transparent" CornerRadius="15">
                                    <HorizontalStackLayout Spacing="10">
                                        <Path VerticalOptions="Center" HorizontalOptions="Center" Stroke="#512BD4" StrokeThickness="1" StrokeMiterLimit="10" HeightRequest="24" WidthRequest="24" Data="M18,2H6C4.895,2,4,2.895,4,4v16c0,1.105,0.895,2,2,2h12c1.105,0,2-0.895,2-2V4C20,2.895,19.105,2,18,2z M12,6 c1.7,0,3,1.3,3,3s-1.3,3-3,3s-3-1.3-3-3S10.3,6,12,6z M16.333,18H7.667C7.298,18,7,17.702,7,17.333V17c0-1.571,2.512-3,5-3 s5,1.429,5,3v0.333C17,17.702,16.702,18,16.333,18z"></Path>
                                        <VerticalStackLayout>
                                            <Entry Placeholder="Password repeat..." Text="{Binding PasswordRepeat.Value,Mode=TwoWay}" 
                                           IsPassword="{Binding ShowPassword,Converter={StaticResource BoolInvertConverter}}" 
                                                   IsTextPredictionEnabled="False" 
                                                   IsSpellCheckEnabled="False">
                                                <Entry.Behaviors>
                                                    <toolkit:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateByValueChangeCommand}" CommandParameter="3" />
                                                </Entry.Behaviors>
                                                <Entry.Triggers>
                                                    <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding PasswordRepeat.IsValid,Mode=OneWayToSource}" Value="False">
                                                        <Setter Property="BackgroundColor" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger TargetType="{x:Type Entry}" Binding="{Binding PasswordRepeat.IsValid,Mode=OneWayToSource}" Value="True">
                                                        <Setter Property="BackgroundColor" Value="Transparent" />
                                                    </DataTrigger>
                                                </Entry.Triggers>
                                            </Entry>
                                            <Label Text="{Binding PasswordRepeat.Errors, Converter={StaticResource FirstValidationErrorConverter}}" MaximumWidthRequest="150" />
                                        </VerticalStackLayout>
                                    </HorizontalStackLayout>
                                </Frame>

                            </VerticalStackLayout>
                        </ScrollView>
                        <HorizontalStackLayout Spacing="5" HorizontalOptions="Center">
                            <Button 
                            Text="SIGN UP" 
                            Command="{Binding SubmitCommand}"
                            CommandParameter="{StaticResource False}"
                            HorizontalOptions="Center" 
                            BackgroundColor="White" 
                            TextColor="{StaticResource Primary}" 
                            FontSize="Subtitle" 
                            FontAttributes="Bold"></Button>

                        </HorizontalStackLayout>
                    </VerticalStackLayout>
                    

                    <VerticalStackLayout
                        ZIndex="2"
                        HorizontalOptions="Center"
                        IsVisible="{Binding IsNotActivatedButRegistered}"
                        Spacing="20">
                        <Label 
                            HorizontalOptions="Center"
                            HorizontalTextAlignment="Center"
                            Text="Successfully registered! Check your Email account!" 
                            TextColor="White" 
                            FontSize="20" 
                            FontAttributes="Bold"></Label>
                        <Label 
                            HorizontalOptions="Center"
                            HorizontalTextAlignment="Center"
                            Text="Welcome to jellyfish, the free messenger for every seafarers." 
                            TextColor="White" 
                            FontSize="14" 
                            FontAttributes="Bold"></Label>
                        <Label 
                            HorizontalOptions="Center"
                            HorizontalTextAlignment="Center"
                            Text="To activate your account enter the activation code below" 
                            TextColor="White" 
                            FontSize="14" 
                            FontAttributes="Bold"></Label>
                        <Border
                            Padding="16"
                            StrokeThickness="0"
                            BackgroundColor="White">
                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="25,25,25,25"></RoundRectangle>
                            </Border.StrokeShape>

                            <HorizontalStackLayout 
                            HorizontalOptions="Center"
                            Spacing="10">
                                <Entry 
                                    x:Name="ActivationCodePart1Entry"
                                    TextChanged="ActivationCodePart1Entry_TextChanged"
                                    HorizontalTextAlignment="Center"
                                    VerticalTextAlignment="Center"
                                    MaxLength="1"
                                    PlaceholderColor="Gray"
                                    Background="{StaticResource Primary}"
                                    TextColor="White"
                                    FontAttributes="None"
                                    FontSize="24"
                                    Keyboard="Numeric" 
                                    Placeholder="0" 
                                    Text="{Binding ActivationCodePart1.Value,Mode=TwoWay}">
                                </Entry>
                                <Entry 
                                    x:Name="ActivationCodePart2Entry"
                                    TextChanged="ActivationCodePart2Entry_TextChanged"
                                    HorizontalTextAlignment="Center"
                                    VerticalTextAlignment="Center"
                                    MaxLength="1"
                                    PlaceholderColor="Gray"
                                    Background="{StaticResource Primary}"
                                    TextColor="White"
                                    FontAttributes="None"
                                    FontSize="24"
                                    Keyboard="Numeric" 
                                    Placeholder="0" 
                                    Text="{Binding ActivationCodePart2.Value,Mode=TwoWay}"></Entry>
                                <Entry 
                                    x:Name="ActivationCodePart3Entry"
                                    TextChanged="ActivationCodePart3Entry_TextChanged"
                                    HorizontalTextAlignment="Center"
                                    VerticalTextAlignment="Center"
                                    MaxLength="1"
                                    PlaceholderColor="Gray"
                                    Background="{StaticResource Primary}"
                                    TextColor="White"
                                    FontAttributes="None"
                                    FontSize="24"
                                    Keyboard="Numeric" 
                                    Placeholder="0" 
                                    Text="{Binding ActivationCodePart3.Value,Mode=TwoWay}"></Entry>
                                <Entry 
                                    x:Name="ActivationCodePart4Entry"
                                    TextChanged="ActivationCodePart4Entry_TextChanged"
                                    HorizontalTextAlignment="Center"
                                    VerticalTextAlignment="Center"
                                    MaxLength="1"
                                    PlaceholderColor="Gray"
                                    Background="{StaticResource Primary}"
                                    TextColor="White"
                                    FontAttributes="None"
                                    FontSize="24"
                                    Keyboard="Numeric" 
                                    Placeholder="0" 
                                    Text="{Binding ActivationCodePart4.Value,Mode=TwoWay}"></Entry>
                            </HorizontalStackLayout>
                        </Border>
                        <Label Text="It seems that your activation code is not valid"
                               IsVisible="{Binding IsActivationError,Mode=TwoWay}"
                               TextColor="Red"
                               FontSize="12"
                               FontAttributes="Bold"></Label>
                        <Button 
                            IsVisible="{Binding IsActivationError}"
                            HorizontalOptions="Center"
                            Text="Send new code" 
                            Command="{Binding SendNewActivationCodeCommand}" 
                            TextColor="{StaticResource Primary}" 
                            BackgroundColor="White"></Button>
                        <Button 
                            IsVisible="{Binding IsActivationError,Converter={StaticResource BoolInvertConverter}}"
                            HorizontalOptions="Center"
                            Text="Resend activation Mail" 
                            Command="{Binding ResendActivationMailCommand}" 
                            TextColor="{StaticResource Primary}" 
                            BackgroundColor="White"></Button>
                        <Button 
                            x:Name="ActivateAccountButton"
                            IsVisible="{Binding IsActivationError,Converter={StaticResource BoolInvertConverter}}"
                            HorizontalOptions="Center"
                            Text="Activate" 
                            Command="{Binding ActivateAccountCommand}" 
                            TextColor="{StaticResource Primary}" 
                            BackgroundColor="White"></Button>
                    </VerticalStackLayout>
                    <VerticalStackLayout
                        VerticalOptions="Center"
                        HorizontalOptions="Center"
                        IsVisible="{Binding IsActivated,Mode=TwoWay}"
                        Spacing="20">

                        <skia:SKLottieView
                            
                              Source="registered.json"
                              RepeatCount="-1" 
                            RepeatMode="Restart"
                        HorizontalOptions="Center"
                        VerticalOptions="Start"
                                HeightRequest="256"
                                WidthRequest="256" BackgroundColor="Transparent"/>

                        <Button 
                            x:Name="ReturnToLoginButton"
                            HorizontalOptions="Center"
                            Text="Login" 
                            Command="{Binding ReturnToLoginCommand}" 
                            TextColor="{StaticResource Primary}" 
                            BackgroundColor="White"></Button>
                    </VerticalStackLayout>
                    <ActivityIndicator Margin="0,0,0,0" Color="White" IsRunning="True" IsVisible="{Binding IsLoading}" HeightRequest="20" WidthRequest="20">
                    </ActivityIndicator>

                </VerticalStackLayout>
                
            </ScrollView>
            
        </Border>
    </Grid>
</customcontrol:CustomContentPage>
